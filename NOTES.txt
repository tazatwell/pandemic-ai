Developer Notes:

Updated 2.23.19:
	Now has allows traveling through research stations. On ~7.5.
	Working on building epidemic cards and the epidemic counter.
	No need to write unit tests or test for code coverage - producing test cases is very difficult.



0. added my id_rsa key to automate credential authentication
	0.1	Using credential storer to store keys
1. Create the board game Pandemic
	1.1 Store the map as a graph, w vertices and edges.
	1.2 Store the player deck and infection deck using an array.
	1.3 Each city will also have a counter for the number of disease cubes in that city.
2. Use TravisCI for automated unit testing.
3. Store number of players ( 1 - 7).
4. Store all character roles.
5. Randomly assign each character a player role.
6. Create a player class - should have role, position, and list of cards
	6.1 Create a card class - should have isEvent bool member and name.
7. Loop - while game is not over, do:
	7.1 Display options - print all cities w diseases, player info, for every nearby city print an option w coresponding number.
	7.3 Draw two cards from infection deck. infect cities
	7.4 At end of every players' turn, draw 2 cards. allow fast travel to any city w card, but then delete card after.
		7.41 Give each player cards at the beginning of the game
		7.42 If player has more than 7 cards, they need to discard at the end of their turn.
		7.43	Code building research stations
		7.431 Delete player card if he/she wants to build a research station
		7.44 Allow option to travel between cities with research stations
	7.5	Code epidemic cards - have an epidemic counter and 'free Epidemic' tracker.
	7.7 Code outbreaks and outbreak tracker
	7.6	Code event cards
	7.7 Code cures to diseases - need 5 of same color and be in research station
	7.8 Rt now I have a victory condition if all disease cubes on the board are taken off. This needs to be removed.
8. Implement player abilities at the end.
9. Only discard cards at the end of the player's turn, i.e. if player receives a card and now has 8, he/she doesn't discard until the end of his/her turn
10. Implement trading cards
11. Code difficulties - easy is 3/4, medium is 5, brave is 6
12. Build an AI to solve this game.
